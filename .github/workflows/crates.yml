name: Release crate

on:
  workflow_dispatch:
    inputs:
      version:
        description: "major/minor/patch or semver"
        required: false
        default: "patch"
      derive-version:
        description: "major/minor/patch or semver or none if not updating derive crate"
        required: false
        default: "none"

concurrency: release-crate

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Set git credentials
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Crates publish
      uses: kaleidawave/crates-release-gh-action@main
      id: release
      with:
        version: |
            {
              "derive-finite-automaton": "${{ github.event.inputs.version }}", 
              "derive-finite-automaton-derive": "${{ github.event.inputs.derive-version }}" 
            }
        crates-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Push updated Cargo.toml
      run: |
        git add .
        git commit -m "Release: ${{ steps.release.outputs.new-versions-description }}"
        echo '${{ steps.release.outputs.new-versions }}' | jq -r '.[]' | while read -r update; do
          git tag "release/$update"
        done
        git push --tags origin main

    - name: Discord
      uses: rjstone/discord-webhook-notify@main
      with:
        severity: info
        text: "Released version ${{ steps.release.outputs.new-versions-description }}"
        webhookUrl: ${{ secrets.DISCORD_WEBHOOK_ENDPOINT }}
